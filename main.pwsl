// EarthOS init system
//
//    Copyright (C) 2021  adazem009
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
include/"messages.pwsl"
include/"mount.pwsl"
// pid must be 1
if/[%pid != 1]
	print/"Init must be run as pid 1!",\n
	exit
endif
// User must be root
if/[%whoami != "root"]
	print/"Init must be run as root!",\n
	exit
endif
// Welcome message
print/"*** EarthOS init system ***",\n
// Config
set/"srvpath","/etc/init.d"/"fstab_path","/etc/fstab"
// Mount filesystems specified in fstab
mountall/fstab_path
if/[ret != ""]
	geterror/ret,0/"ret"
	if/[rsn == "fstab"]
		set/"msg",fstab_path,": ",ret
	else
		set/"msg","Failed to mount the filesystem: ",ret
	endif
	FAIL/msg
	exit
endif
// List services
ls/srvpath/"raw_srv"
set/"ret",%returnc
if/[ret != ""]
	geterror/ret,0/"ret"
	set/"msg",srvpath,": ",ret
	FAIL/msg
	exit
endif
// Sort services
setlist/"srv","nums"
getlistlength/"raw_srv"/"len"
set/"i",0/"min","Infinity"
repeat/len
	calc/"i=i+1"
	getitem/"raw_srv",i/"it"
	getlength/it/"len2"
	set/"num",""/"i2",0
	while/[i2 < len2]
		calc/"i2=i2+1"
		getletter/it,i2/"let"
		if/[let == "-"]
			set/"i2",len2
		else
			set/"num",num,let
		endif
	endloop
	if/[num < min]
		insert/1,it/"srv"
		insert/1,num/"nums"
		set/"min",num
	else
		getlistlength/"srv"/"len2"
		set/"i2",len2
		while/[i2 > 0]
			getitem/"nums",i2/"it2"
			if/[num >= it2]
				calc/"tmp=i2+1"
				insert/tmp,it/"srv"
				insert/tmp,num/"nums"
				set/"i2",1
			endif
			calc/"i2=i2-1"
		endloop
	endif
endloop
// Start services
getlistlength/"srv"/"len"
if/[len == 0]
	print/"Error: No services found",\n
	exit
endif
set/"i",0
repeat/len
	calc/"i=i+1"
	getitem/"srv",i/"name"
	set/"path",srvpath,"/",name
	getfile/path/"file"
	set/"ret",%returnc
	if/[ret != ""]
		geterror/ret,0/"ret"
		set/"msg",path,": ",ret
		FAIL/msg
	else
		// Read service
		getlistlength/"file"/"len2"
		mod/len2,2/"mod"
		set/"inv",0/"fail",0
		if/[mod != 0]
			set/"inv",1
		else
			div/len2,2/"len2"
			setlist/"atts","vals"
			set/"i2",0
			repeat/len2
				calc/"i2=i2+1"
				// Attribute name
				getitem/"file",i2/"att"
				// Attribute value
				calc/"i2=i2+1"
				getitem/"file",i2/"val"
				// Add attribute
				append/att/"atts"
				append/val/"vals"
			endloop
			// Check name
			getindex/"atts","name"/"ix"
			getitem/"vals",ix/"name"
			if/[name == ""]
				set/"inv",1
			else
				// Check exec
				getindex/"atts","exec"/"ix"
				getitem/"vals",ix/"exec"
				if/[name == ""]
					set/"inv",1
				else
					// Check user
					getindex/"atts","user"/"ix"
					getitem/"vals",ix/"user"
					getusers/"users"
					getindex/"users",user/"ix"
					wait/1
					if/[ix == 0]
						set/"inv",1
					else
						// Start service
						print/"Starting ",\b1,name,\b0,\n
						ftest/exec,"rx","f"/"test"
						set/"ret",%returnc
						if/[ret != ""]
							geterror/ret,0/"ret"
							set/"msg","Failed to execute '",exec,"' (",ret,")"/"fail",1
							FAIL/msg
						endif
						if/[fail == 0]
							getfile/exec/"file"
							listtobin/"file"/"bin"
							getindex/"atts","wait"/"ix"
							getitem/"vals",ix/"wait"
							if/[wait == "false"] or [wait != "true"]
								run/bin,"bg",user
								wait/wait
							else
								run/bin,"wait",user
							endif
							srvOK/name
						else
							srvFAIL/name
						endif
					endif
				endif
			endif
		endif
		if/[inv == 1]
			set/"msg","Invalid service in ",path
			FAIL/msg
		endif
	endif
endloop
// System calls for poweroff and reboot are coming soon
// Run an infinite loop for now
while/[true]
endloop
